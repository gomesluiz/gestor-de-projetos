// <auto-generated />
using System;
using Ferrero.GestorDeProjetos.Web.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ferrero.GestorDeProjetos.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190821000641_DatabaseCreation")]
    partial class DatabaseCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CentroDeCustoId");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50);

                    b.Property<int>("Divisao")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<bool>("EdificacaoEmAndamento")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("MaquinaEmMontagemInstalacao")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("Natureza");

                    b.Property<string>("Numero")
                        .HasMaxLength(10);

                    b.Property<string>("Observacoes")
                        .HasMaxLength(250);

                    b.Property<int?>("OrdemDeInvestimentoId");

                    b.Property<string>("Planta")
                        .HasMaxLength(50);

                    b.Property<bool>("ProntoParaUso")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("Propriedade")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("Requisitante")
                        .HasMaxLength(50);

                    b.Property<int>("SituacaoDoAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<bool>("UsoNoAdministrativo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("UsoNoProcessoFabril")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("CentroDeCustoId");

                    b.HasIndex("OrdemDeInvestimentoId");

                    b.ToTable("Ativos");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.CentroDeCusto", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CentrosDeCusto");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Domain.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arquivo")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Descricao")
                        .HasMaxLength(250);

                    b.Property<int>("ProjetoId");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Versao")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Domain.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Concluido");

                    b.Property<DateTime>("DataDeInicio")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataDeTermino")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("OrdemDeInvestimentoId");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeInvestimentoId");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Gantt.Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration");

                    b.Property<int?>("ParentId");

                    b.Property<decimal>("Progress");

                    b.Property<int>("ProjetoId");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Text");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Gantt.Vinculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjetoId");

                    b.Property<int>("SourceTaskId");

                    b.Property<int>("TargetTaskId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Vinculos");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Kanban.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(250);

                    b.Property<int>("ListaId");

                    b.Property<int>("ProjetoId");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.NotaFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDeLancamento")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("FornecedorId");

                    b.Property<long>("Migo");

                    b.Property<int>("Numero");

                    b.Property<int?>("RequisicaoDeCompraId");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("RequisicaoDeCompraId");

                    b.ToTable("NotasFiscais");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.OrdemDeInvestimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Budget")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.HasKey("Id");

                    b.ToTable("OrdensDeInvestimento");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.RequisicaoDeCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AtivoId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .HasMaxLength(250);

                    b.Property<long>("Numero");

                    b.Property<long?>("NumeroDaOrdemDeCompra");

                    b.Property<string>("Proposta")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.ToTable("RequisicoesDeCompra");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.ResumoFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Actual")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal>("Assigned")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal>("Available")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal>("Commitment")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("OrdemDeInvestimentoId");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeInvestimentoId");

                    b.ToTable("ResumosFinanceiros");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Security.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Ativo", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.CentroDeCusto", "CentroDeCusto")
                        .WithMany()
                        .HasForeignKey("CentroDeCustoId");

                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.OrdemDeInvestimento", "OrdemDeInvestimento")
                        .WithMany()
                        .HasForeignKey("OrdemDeInvestimentoId");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Domain.Documento", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Domain.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Domain.Projeto", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.OrdemDeInvestimento", "OrdemDeInvestimento")
                        .WithMany()
                        .HasForeignKey("OrdemDeInvestimentoId");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Gantt.Atividade", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Domain.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Gantt.Vinculo", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Domain.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.Kanban.Tarefa", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Domain.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.NotaFiscal", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.RequisicaoDeCompra", "RequisicaoDeCompra")
                        .WithMany()
                        .HasForeignKey("RequisicaoDeCompraId");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.RequisicaoDeCompra", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Ativo", "Ativo")
                        .WithMany()
                        .HasForeignKey("AtivoId");
                });

            modelBuilder.Entity("Ferrero.GestorDeProjetos.Web.Models.ResumoFinanceiro", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.OrdemDeInvestimento", "OrdemDeInvestimento")
                        .WithMany()
                        .HasForeignKey("OrdemDeInvestimentoId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Security.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Security.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Security.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Ferrero.GestorDeProjetos.Web.Models.Security.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
