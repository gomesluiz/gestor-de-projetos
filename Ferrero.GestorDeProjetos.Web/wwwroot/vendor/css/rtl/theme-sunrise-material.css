body {
  background: #f5f5f5; }

.bg-body {
  background: #f5f5f5 !important; }

.text-primary {
  color: #fc5a5c !important; }

a.text-primary:hover, a.text-primary:focus {
  color: #fb0f12 !important; }

.bg-primary {
  background-color: #fc5a5c !important; }

a.bg-primary:hover, a.bg-primary:focus {
  background-color: #ef5657 !important; }

.bg-primary-dark {
  background-color: #e35153 !important; }

a.bg-primary-dark:hover, a.bg-primary-dark:focus {
  background-color: #d84d4f !important; }

.bg-primary-darker {
  background-color: #d64d4e !important; }

a.bg-primary-darker:hover, a.bg-primary-darker:focus {
  background-color: #cb494a !important; }

html:not([dir=rtl]) .border-primary, html[dir=rtl] .border-primary {
  border-color: #fc5a5c !important; }

.badge-primary {
  background-color: #fc5a5c;
  color: #fff; }

.badge-primary[href]:hover, .badge-primary[href]:focus {
  background-color: #ef5657;
  color: #fff;
  text-decoration: none; }

.btn .badge-primary {
  background: #fc5a5c !important;
  border-color: #fc5a5c !important;
  color: #fff !important; }

.badge-outline-primary {
  background-color: transparent;
  box-shadow: 0 0 0 1px #fc5a5c inset;
  color: #fc5a5c; }

.badge-outline-primary[href]:hover, .badge-outline-primary[href]:focus {
  color: #fc5a5c;
  text-decoration: none; }

.btn .badge-outline-primary {
  background-color: transparent !important;
  box-shadow: 0 0 0 1px #fc5a5c inset !important;
  color: #fc5a5c !important; }

.page-item.active .page-link, .page-item.active .page-link:hover, .page-item.active .page-link:focus,
.pagination li.active > a:not(.page-link),
.pagination li.active > a:not(.page-link):hover,
.pagination li.active > a:not(.page-link):focus {
  border-color: #fc5a5c;
  background-color: #fc5a5c;
  color: #fff; }

.progress-bar {
  background-color: #fc5a5c;
  color: #fff; }

.list-group-item-primary {
  border-color: rgba(0, 0, 0, 0.07);
  background-color: #ffefef;
  color: #666060; }

a.list-group-item-primary,
button.list-group-item-primary {
  color: #666060; }
  a.list-group-item-primary:hover, a.list-group-item-primary:focus,
  button.list-group-item-primary:hover,
  button.list-group-item-primary:focus {
    background-color: #fceded;
    color: #666060; }
  a.list-group-item-primary.active,
  button.list-group-item-primary.active {
    border-color: #fc5a5c;
    background-color: #fc5a5c;
    color: #666060; }

.list-group-item.active, .list-group-item.active:hover, .list-group-item.active:focus {
  border-color: #fc5a5c;
  background-color: #fc5a5c;
  color: #fff; }

.alert-primary {
  border-color: #f0d8d9;
  background-color: #ffe6e7;
  color: #665c5c; }
  .alert-primary hr {
    border-top-color: #f0d8d9; }
  .alert-primary .alert-link {
    color: #665c5c; }

.alert-dark-primary {
  background-color: #fc5a5c;
  color: #fff; }
  .alert-dark-primary hr {
    border-top-color: rgba(255, 255, 255, 0.2); }
  .alert-dark-primary .close,
  .alert-dark-primary .alert-link {
    color: #fff; }

.tooltip-primary .tooltip-inner, .tooltip-primary > .tooltip .tooltip-inner, .ngb-tooltip-primary + ngb-tooltip-window .tooltip-inner {
  background: #fc5a5c;
  color: #fff; }

.tooltip-primary.bs-tooltip-top .arrow::before, .tooltip-primary.bs-tooltip-auto[x-placement^="top"] .arrow::before, .tooltip-primary > .tooltip.bs-tooltip-top .arrow::before, .tooltip-primary > .tooltip.bs-tooltip-auto[x-placement^="top"] .arrow::before, .ngb-tooltip-primary + ngb-tooltip-window.bs-tooltip-top .arrow::before, .ngb-tooltip-primary + ngb-tooltip-window.bs-tooltip-auto[x-placement^="top"] .arrow::before {
  border-top-color: #fc5a5c; }

.tooltip-primary.bs-tooltip-right .arrow::before, .tooltip-primary.bs-tooltip-auto[x-placement^="right"] .arrow::before, .tooltip-primary > .tooltip.bs-tooltip-right .arrow::before, .tooltip-primary > .tooltip.bs-tooltip-auto[x-placement^="right"] .arrow::before, .ngb-tooltip-primary + ngb-tooltip-window.bs-tooltip-right .arrow::before, .ngb-tooltip-primary + ngb-tooltip-window.bs-tooltip-auto[x-placement^="right"] .arrow::before {
  border-right-color: #fc5a5c; }

.tooltip-primary.bs-tooltip-bottom .arrow::before, .tooltip-primary.bs-tooltip-auto[x-placement^="bottom"] .arrow::before, .tooltip-primary > .tooltip.bs-tooltip-bottom .arrow::before, .tooltip-primary > .tooltip.bs-tooltip-auto[x-placement^="bottom"] .arrow::before, .ngb-tooltip-primary + ngb-tooltip-window.bs-tooltip-bottom .arrow::before, .ngb-tooltip-primary + ngb-tooltip-window.bs-tooltip-auto[x-placement^="bottom"] .arrow::before {
  border-bottom-color: #fc5a5c; }

.tooltip-primary.bs-tooltip-left .arrow::before, .tooltip-primary.bs-tooltip-auto[x-placement^="left"] .arrow::before, .tooltip-primary > .tooltip.bs-tooltip-left .arrow::before, .tooltip-primary > .tooltip.bs-tooltip-auto[x-placement^="left"] .arrow::before, .ngb-tooltip-primary + ngb-tooltip-window.bs-tooltip-left .arrow::before, .ngb-tooltip-primary + ngb-tooltip-window.bs-tooltip-auto[x-placement^="left"] .arrow::before {
  border-left-color: #fc5a5c; }

.popover-primary, .popover-primary > .popover, .ngb-popover-primary + ngb-popover-window {
  border-color: transparent;
  background: #fc5a5c; }
  .popover-primary .popover-header, .popover-primary > .popover .popover-header, .ngb-popover-primary + ngb-popover-window .popover-header {
    border-color: rgba(255, 255, 255, 0.2);
    background: transparent;
    color: #fff; }
  .popover-primary .popover-body, .popover-primary > .popover .popover-body, .ngb-popover-primary + ngb-popover-window .popover-body {
    background: transparent;
    color: #fff; }
  .popover-primary > .arrow::before, .popover-primary > .popover > .arrow::before, .ngb-popover-primary + ngb-popover-window > .arrow::before {
    border-color: transparent; }
  .popover-primary.bs-popover-top > .arrow::after, .popover-primary.bs-popover-auto[x-placement^="top"] > .arrow::after, .popover-primary > .popover.bs-popover-top > .arrow::after, .popover-primary > .popover.bs-popover-auto[x-placement^="top"] > .arrow::after, .ngb-popover-primary + ngb-popover-window.bs-popover-top > .arrow::after, .ngb-popover-primary + ngb-popover-window.bs-popover-auto[x-placement^="top"] > .arrow::after {
    border-top-color: #fc5a5c; }
  .popover-primary.bs-popover-right > .arrow::after, .popover-primary.bs-popover-auto[x-placement^="right"] > .arrow::after, .popover-primary > .popover.bs-popover-right > .arrow::after, .popover-primary > .popover.bs-popover-auto[x-placement^="right"] > .arrow::after, .ngb-popover-primary + ngb-popover-window.bs-popover-right > .arrow::after, .ngb-popover-primary + ngb-popover-window.bs-popover-auto[x-placement^="right"] > .arrow::after {
    border-right-color: #fc5a5c; }
  .popover-primary.bs-popover-bottom > .arrow::after, .popover-primary.bs-popover-auto[x-placement^="bottom"] > .arrow::after, .popover-primary > .popover.bs-popover-bottom > .arrow::after, .popover-primary > .popover.bs-popover-auto[x-placement^="bottom"] > .arrow::after, .ngb-popover-primary + ngb-popover-window.bs-popover-bottom > .arrow::after, .ngb-popover-primary + ngb-popover-window.bs-popover-auto[x-placement^="bottom"] > .arrow::after {
    border-bottom-color: #fc5a5c; }
  .popover-primary.bs-popover-left > .arrow::after, .popover-primary.bs-popover-auto[x-placement^="left"] > .arrow::after, .popover-primary > .popover.bs-popover-left > .arrow::after, .popover-primary > .popover.bs-popover-auto[x-placement^="left"] > .arrow::after, .ngb-popover-primary + ngb-popover-window.bs-popover-left > .arrow::after, .ngb-popover-primary + ngb-popover-window.bs-popover-auto[x-placement^="left"] > .arrow::after {
    border-left-color: #fc5a5c; }

.table .table-primary,
.table .table-primary > th,
.table .table-primary > td {
  border-color: rgba(0, 0, 0, 0.035) !important;
  background-color: #ffefef;
  color: #666060; }

.table-hover .table-primary:hover,
.table-hover .table-primary:hover > td,
.table-hover .table-primary:hover > th {
  background-color: #fceded; }

.btn-primary {
  background: #fc5a5c;
  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.07), 0px 4px 5px 0px rgba(0, 0, 0, 0.05), 0px 1px 10px 0px rgba(0, 0, 0, 0.03);
  color: #fff; }
  .btn-primary:hover {
    background: #fc6264;
    color: #fff; }
  .btn-primary:hover, .btn-primary:focus {
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.15), 0px 4px 5px 0px rgba(0, 0, 0, 0.1), 0px 1px 10px 0px rgba(0, 0, 0, 0.06); }

.btn-primary .badge {
  background: #fff;
  color: #fc5a5c; }

.btn-primary .waves-ripple {
  background: rgba(255, 255, 255, 0.3); }

.btn-primary:active,
.btn-primary.active,
.show > .btn-primary.dropdown-toggle {
  background: #fc6f71;
  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.15), 0px 8px 10px 1px rgba(0, 0, 0, 0.1), 0px 3px 14px 2px rgba(0, 0, 0, 0.06); }

.btn-primary.md-btn-flat {
  background: none;
  box-shadow: none;
  color: #fc5a5c; }
  .btn-primary.md-btn-flat:focus, .btn-primary.md-btn-flat.focus {
    background: rgba(252, 90, 92, 0.1); }
  .btn-primary.md-btn-flat .waves-ripple {
    background: rgba(252, 90, 92, 0.3); }

.btn-primary.md-btn-flat:active,
.btn-primary.md-btn-flat.active,
.show > .btn-primary.md-btn-flat.dropdown-toggle {
  background: rgba(252, 90, 92, 0.15); }

.btn-primary.disabled,
.btn-primary:disabled {
  background: #fc5a5c !important;
  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.07), 0px 4px 5px 0px rgba(0, 0, 0, 0.05), 0px 1px 10px 0px rgba(0, 0, 0, 0.03) !important;
  color: #fff !important; }

.btn-primary.md-btn-flat.disabled,
.btn-primary.md-btn-flat:disabled {
  background: none !important;
  box-shadow: none !important;
  color: #fc5a5c !important; }

.btn-outline-primary {
  background: transparent;
  box-shadow: 0 0 0 1px #fc5a5c inset;
  color: #fc5a5c; }
  .btn-outline-primary:hover, .btn-outline-primary:focus {
    background: #fc5a5c;
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.15), 0px 4px 5px 0px rgba(0, 0, 0, 0.1), 0px 1px 10px 0px rgba(0, 0, 0, 0.06);
    color: #fff; }
  .btn-outline-primary.disabled, .btn-outline-primary:disabled {
    background: transparent !important;
    box-shadow: 0 0 0 1px #fc5a5c inset !important;
    color: #fc5a5c !important; }

.btn-outline-primary:active,
.btn-outline-primary.active,
.show > .btn-outline-primary.dropdown-toggle {
  background: #fc6264;
  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.15), 0px 8px 10px 1px rgba(0, 0, 0, 0.1), 0px 3px 14px 2px rgba(0, 0, 0, 0.06);
  color: #fff; }

.btn-outline-primary .waves-ripple {
  background: rgba(255, 255, 255, 0.3); }

.btn-outline-primary .badge {
  background: #fc5a5c;
  border-color: #fc5a5c;
  color: #fff; }

.btn-outline-primary:hover .badge,
.btn-outline-primary:focus .badge,
.btn-outline-primary:active .badge,
.btn-outline-primary.active .badge,
.show > .btn-outline-primary.dropdown-toggle .badge {
  background: #fff;
  border-color: #fff;
  color: #fc5a5c; }

.dropdown-item:not(.disabled).active {
  background-color: #fc5a5c;
  color: #fff; }

.dropdown-menu > li.active:not(.disabled) > a:not(.dropdown-item) {
  background-color: #fc5a5c;
  color: #fff; }

.nav-tabs .nav-link {
  background-image: linear-gradient(#fc5a5c, #fc5a5c); }

.nav-pills .nav-link.active, .nav-pills .nav-link.active:hover, .nav-pills .nav-link.active:focus {
  background-color: #fc5a5c;
  color: #fff; }

.custom-control.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before,
.custom-control.custom-checkbox .custom-control-input:checked ~ .custom-control-label::before,
.custom-control.custom-radio .custom-control-input:checked ~ .custom-control-label::before {
  border-color: #fc5a5c; }

.custom-control.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before {
  background-color: #fc5a5c;
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23fff' d='M0 2h4'/%3E%3C/svg%3E"); }

.custom-control.custom-checkbox .custom-control-input:checked ~ .custom-control-label::before {
  background-color: #fc5a5c;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 9.5 7.5'%3E%3Cpolyline points='0.25 4.35 4.18 6.75 9.25 0.75' style='fill:none;stroke:%23fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px'/%3E%3C/svg%3E"); }

.custom-control.custom-radio .custom-control-input ~ .custom-control-label::before {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fc5a5c'/%3E%3C/svg%3E"); }

.custom-control .custom-control-input:checked ~ .custom-control-label::after {
  background: rgba(252, 90, 92, 0.15); }

.custom-file-input:focus ~ .custom-file-label {
  border-bottom-color: #fc5a5c;
  box-shadow: 0 -1px 0 0 #fc5a5c inset; }

.form-control:focus,
.custom-select:focus {
  border-bottom-color: #fc5a5c;
  box-shadow: 0 -1px 0 0 #fc5a5c inset; }

.switcher-input:checked ~ .switcher-indicator {
  background: rgba(252, 90, 92, 0.5); }
  .switcher-input:checked ~ .switcher-indicator::after {
    background: #fc5a5c; }
  .switcher-input:checked ~ .switcher-indicator::before {
    background: rgba(252, 90, 92, 0.15); }

.navbar.bg-primary {
  background-color: #fc5a5c !important;
  color: #fee1e1; }
  .navbar.bg-primary .navbar-brand {
    color: #fff; }
    .navbar.bg-primary .navbar-brand:hover, .navbar.bg-primary .navbar-brand:focus {
      color: #fff; }
  .navbar.bg-primary .navbar-nav .nav-link {
    color: #fee1e1; }
    .navbar.bg-primary .navbar-nav .nav-link:hover, .navbar.bg-primary .navbar-nav .nav-link:focus {
      color: #fff; }
    .navbar.bg-primary .navbar-nav .nav-link.disabled {
      color: #fdabac !important; }
  .navbar.bg-primary .navbar-nav .show > .nav-link,
  .navbar.bg-primary .navbar-nav .active > .nav-link,
  .navbar.bg-primary .navbar-nav .nav-link.show,
  .navbar.bg-primary .navbar-nav .nav-link.active {
    color: #fff; }
  .navbar.bg-primary .navbar-toggler {
    color: #fee1e1;
    border-color: rgba(255, 255, 255, 0.15); }
  .navbar.bg-primary .navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(255, 255, 255, 0.8)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e"); }
  .navbar.bg-primary .navbar-text {
    color: #fee1e1; }
    .navbar.bg-primary .navbar-text a {
      color: #fff; }
      .navbar.bg-primary .navbar-text a:hover, .navbar.bg-primary .navbar-text a:focus {
        color: #fff; }
  .navbar.bg-primary hr {
    border-color: rgba(255, 255, 255, 0.15); }

.sidenav.bg-primary {
  background-color: #fc5a5c !important;
  color: #fee1e1; }
  .sidenav.bg-primary .sidenav-link,
  .sidenav.bg-primary .sidenav-horizontal-prev,
  .sidenav.bg-primary .sidenav-horizontal-next {
    color: #fee1e1; }
    .sidenav.bg-primary .sidenav-link:hover, .sidenav.bg-primary .sidenav-link:focus,
    .sidenav.bg-primary .sidenav-horizontal-prev:hover,
    .sidenav.bg-primary .sidenav-horizontal-prev:focus,
    .sidenav.bg-primary .sidenav-horizontal-next:hover,
    .sidenav.bg-primary .sidenav-horizontal-next:focus {
      color: #fff; }
    .sidenav.bg-primary .sidenav-link.active,
    .sidenav.bg-primary .sidenav-horizontal-prev.active,
    .sidenav.bg-primary .sidenav-horizontal-next.active {
      color: #fff; }
  .sidenav.bg-primary .sidenav-item.disabled .sidenav-link,
  .sidenav.bg-primary .sidenav-horizontal-prev.disabled,
  .sidenav.bg-primary .sidenav-horizontal-next.disabled {
    color: #fdabac !important; }
  .sidenav.bg-primary .sidenav-item.open:not(.sidenav-item-closing) > .sidenav-toggle,
  .sidenav.bg-primary .sidenav-item.active > .sidenav-link {
    color: #fff; }
  .sidenav.bg-primary .sidenav-item.active > .sidenav-link:not(.sidenav-toggle) {
    background-color: #ef5657; }
  .sidenav.bg-primary.sidenav-horizontal .sidenav-menu > .sidenav-item.active > .sidenav-link:not(.sidenav-toggle) {
    background-color: #e35253; }
  .sidenav.bg-primary.sidenav-horizontal .sidenav-inner > .sidenav-item:not(.sidenav-item-closing) > .sidenav-menu,
  .sidenav.bg-primary.sidenav-horizontal .sidenav-inner > .sidenav-item.open > .sidenav-toggle {
    background: #ef5657; }
  .sidenav.bg-primary .sidenav-inner > .sidenav-item.sidenav-item-closing .sidenav-item.open .sidenav-menu,
  .sidenav.bg-primary .sidenav-inner > .sidenav-item.sidenav-item-closing .sidenav-item.open .sidenav-toggle {
    background: transparent;
    color: #fee1e1; }
  .sidenav.bg-primary .sidenav-text {
    color: #fff; }
  .sidenav.bg-primary .sidenav-header {
    color: #febfc0; }
  .sidenav.bg-primary hr,
  .sidenav.bg-primary .sidenav-divider,
  .sidenav.bg-primary .sidenav-inner > .sidenav-item.open > .sidenav-menu::before {
    border-color: rgba(255, 255, 255, 0.15) !important; }
  .sidenav.bg-primary .sidenav-inner > .sidenav-header::before,
  .sidenav.bg-primary .sidenav-block::before {
    background-color: rgba(255, 255, 255, 0.15); }
  .sidenav.bg-primary .sidenav-inner > .sidenav-item.open .sidenav-item.open > .sidenav-toggle::before {
    background-color: #f16f70; }
  .sidenav.bg-primary .sidenav-inner > .sidenav-item.open .sidenav-item.active > .sidenav-link::before {
    background-color: #fff; }
  .sidenav.bg-primary .sidenav-inner > .sidenav-item.open .sidenav-item.open > .sidenav-toggle::before,
  .sidenav.bg-primary .sidenav-inner > .sidenav-item.open .sidenav-item.active > .sidenav-link::before {
    box-shadow: 0 0 0 2px #ef5657; }
  .sidenav.bg-primary .ps__thumb-y,
  .sidenav.bg-primary .ps__rail-y.ps--clicking > .ps__thumb-y {
    background: rgba(255, 255, 255, 0.617515) !important; }

.footer.bg-primary {
  background-color: #fc5a5c !important;
  color: #fee1e1; }
  .footer.bg-primary .footer-link {
    color: #fee1e1; }
    .footer.bg-primary .footer-link:hover, .footer.bg-primary .footer-link:focus {
      color: #fff; }
    .footer.bg-primary .footer-link.disabled {
      color: #fdabac !important; }
  .footer.bg-primary .footer-text {
    color: #fff; }
  .footer.bg-primary .show > .footer-link,
  .footer.bg-primary .active > .footer-link,
  .footer.bg-primary .footer-link.show,
  .footer.bg-primary .footer-link.active {
    color: #fff; }
  .footer.bg-primary hr {
    border-color: rgba(255, 255, 255, 0.15); }

.bg-primary.bs4-toast {
  color: #fff;
  background-color: rgba(252, 90, 92, 0.9) !important; }
  .bg-primary.bs4-toast .toast-header {
    color: #fff;
    background-color: rgba(255, 255, 255, 0.1); }

.fill-primary {
  fill: #fc5a5c; }

.slider-primary .slider-handle {
  box-shadow: none !important; }

.slider-primary .slider-handle,
.slider-primary .slider-selection,
.slider-primary .slider-reversed .slider-track-high,
.slider-primary.slider-reversed .slider-track-high {
  background: #fc5a5c; }

.noUi-primary .noUi-base .noUi-handle {
  box-shadow: none !important;
  background: #fc5a5c !important; }

.noUi-primary .noUi-base .noUi-connect {
  background: #fc5a5c !important; }

.material-style .select2-container--default .select2-results__option--highlighted[aria-selected] {
  background-color: #fc5a5c !important;
  color: #fff !important; }

.material-style .select2-container--default.select2-container--focus:not(.select2-container--disabled) .select2-selection,
.material-style .select2-container--default.select2-container--open:not(.select2-container--disabled) .select2-selection {
  border-color: #fc5a5c !important;
  box-shadow: 0 -1px 0 0 #fc5a5c inset !important; }

.material-style .select2-primary .select2-container--default .select2-selection--multiple .select2-selection__choice {
  background: #fc5a5c;
  color: #fff; }

.bootstrap-tagsinput.focus {
  border-color: #fc5a5c !important;
  box-shadow: 0 -1px 0 0 #fc5a5c inset !important; }

.bootstrap-select .dropdown-menu.inner a[aria-selected=true] {
  background: #fc5a5c !important;
  color: #fff !important; }

.datepicker table tr td.active, .datepicker table tr td.active.highlighted, .datepicker table tr td.active.today,
.datepicker table tr td span.active,
.datepicker table tr td span.active.disabled, .datepicker table tr td.range-start, .datepicker table tr td.range-end {
  background: #fc5a5c !important;
  color: #fff !important; }

.datepicker table tr td.range, .datepicker table tr td.range.highlighted, .datepicker table tr td.range.today {
  background: #ffe6e7 !important;
  color: #665c5c !important; }
  .datepicker table tr td.range.focused, .datepicker table tr td.range.highlighted.focused, .datepicker table tr td.range.today.focused {
    background: #ffc7ca !important; }
  .datepicker table tr td.range.disabled, .datepicker table tr td.range.highlighted.disabled, .datepicker table tr td.range.today.disabled {
    background: rgba(255, 230, 231, 0.5) !important;
    color: rgba(102, 92, 92, 0.5) !important; }

.flatpickr-calendar .numInputWrapper span.arrowUp:after {
  border-bottom-color: #fff; }

.flatpickr-calendar .numInputWrapper span.arrowDown:after {
  border-top-color: #fff; }

.flatpickr-month,
span.flatpickr-weekday {
  background: #fc5a5c;
  color: #fff;
  fill: #fff; }

.flatpickr-weekdays {
  background: #fc5a5c; }

.flatpickr-day.today {
  border-color: #fc5a5c; }

.flatpickr-day.inRange, .flatpickr-day.prevMonthDay.inRange, .flatpickr-day.nextMonthDay.inRange, .flatpickr-day.today.inRange, .flatpickr-day.prevMonthDay.today.inRange, .flatpickr-day.nextMonthDay.today.inRange {
  border-color: #ffe6e7 !important;
  background: #ffe6e7 !important;
  color: #665c5c !important; }

.flatpickr-day.selected, .flatpickr-day.startRange, .flatpickr-day.endRange, .flatpickr-day.selected.inRange, .flatpickr-day.startRange.inRange, .flatpickr-day.endRange.inRange, .flatpickr-day.selected:focus, .flatpickr-day.startRange:focus, .flatpickr-day.endRange:focus, .flatpickr-day.selected:hover, .flatpickr-day.startRange:hover, .flatpickr-day.endRange:hover, .flatpickr-day.selected.prevMonthDay, .flatpickr-day.startRange.prevMonthDay, .flatpickr-day.endRange.prevMonthDay, .flatpickr-day.selected.nextMonthDay, .flatpickr-day.startRange.nextMonthDay, .flatpickr-day.endRange.nextMonthDay, .flatpickr-day.week.selected {
  border-color: #fc5a5c !important;
  background: #fc5a5c !important;
  color: #fff !important; }

.daterangepicker td.active {
  background-color: #fc5a5c !important;
  color: #fff !important; }

.daterangepicker td.in-range:not(.start-date):not(.end-date):not(.off) {
  background-color: #ffe6e7 !important;
  color: #665c5c !important; }

.daterangepicker .input-mini.active {
  border-color: #fc5a5c !important; }

.ranges li.active {
  background-color: #fc5a5c !important;
  color: #fff !important; }

.dtp-date,
.dtp-time {
  background: #fc5a5c;
  color: #fff; }

.dtp-close > a {
  color: #fff; }

header.dtp-header {
  background: #d64d4e;
  color: #fff; }

table.dtp-picker-days tr > td > a.selected {
  background: #fc5a5c;
  color: #fff !important; }

.dtp-actual-meridien a.selected {
  background: #fc5a5c !important;
  color: #fff !important; }

.dtp .year-picker-item:hover {
  color: #fc5a5c; }

.dtp .year-picker-item.active {
  color: #fc5a5c; }

.dtp .svg-clock [stroke="#8BC34A"] {
  stroke: #fc5a5c !important; }

.dtp .svg-clock [fill="#8BC34A"] {
  fill: #fc5a5c !important; }

.dtp .svg-clock [fill="#fff"] {
  fill: #fff !important; }

li.ui-timepicker-selected,
.ui-timepicker-list .ui-timepicker-selected:hover {
  background: #fc5a5c !important;
  color: #fff !important; }

.growl-default {
  background: #fc5a5c !important;
  color: #fff !important; }

.md-editor.active {
  border-color: #fc5a5c !important; }

.ql-snow.ql-toolbar button:hover,
.ql-snow.ql-toolbar button:focus,
.ql-snow.ql-toolbar button.ql-active,
.ql-snow.ql-toolbar .ql-picker-label:hover,
.ql-snow.ql-toolbar .ql-picker-label.ql-active,
.ql-snow.ql-toolbar .ql-picker-item:hover,
.ql-snow.ql-toolbar .ql-picker-item.ql-selected,
.ql-snow .ql-toolbar button:hover,
.ql-snow .ql-toolbar button:focus,
.ql-snow .ql-toolbar button.ql-active,
.ql-snow .ql-toolbar .ql-picker-label:hover,
.ql-snow .ql-toolbar .ql-picker-label.ql-active,
.ql-snow .ql-toolbar .ql-picker-item:hover,
.ql-snow .ql-toolbar .ql-picker-item.ql-selected {
  color: #fc5a5c !important; }

.ql-snow.ql-toolbar button:hover .ql-fill,
.ql-snow.ql-toolbar button:focus .ql-fill,
.ql-snow.ql-toolbar button.ql-active .ql-fill,
.ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,
.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,
.ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,
.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,
.ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill,
.ql-snow.ql-toolbar button:focus .ql-stroke.ql-fill,
.ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,
.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,
.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,
.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,
.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,
.ql-snow .ql-toolbar button:hover .ql-fill,
.ql-snow .ql-toolbar button:focus .ql-fill,
.ql-snow .ql-toolbar button.ql-active .ql-fill,
.ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,
.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,
.ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,
.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,
.ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill,
.ql-snow .ql-toolbar button:focus .ql-stroke.ql-fill,
.ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,
.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,
.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,
.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,
.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill {
  fill: #fc5a5c !important; }

.ql-snow.ql-toolbar button:hover .ql-stroke,
.ql-snow.ql-toolbar button:focus .ql-stroke,
.ql-snow.ql-toolbar button.ql-active .ql-stroke,
.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,
.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,
.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,
.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,
.ql-snow.ql-toolbar button:hover .ql-stroke-miter,
.ql-snow.ql-toolbar button:focus .ql-stroke-miter,
.ql-snow.ql-toolbar button.ql-active .ql-stroke-miter,
.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-miter,
.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,
.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-miter,
.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter,
.ql-snow .ql-toolbar button:hover .ql-stroke,
.ql-snow .ql-toolbar button:focus .ql-stroke,
.ql-snow .ql-toolbar button.ql-active .ql-stroke,
.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,
.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,
.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,
.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,
.ql-snow .ql-toolbar button:hover .ql-stroke-miter,
.ql-snow .ql-toolbar button:focus .ql-stroke-miter,
.ql-snow .ql-toolbar button.ql-active .ql-stroke-miter,
.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-miter,
.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,
.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-miter,
.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter {
  stroke: #fc5a5c !important; }

.tt-suggestion:active,
.tt-cursor {
  background: #fc5a5c !important;
  color: #fff !important; }

.dropzone.dz-drag-hover {
  border-color: #fc5a5c !important; }

.swiper-pagination-bullet.swiper-pagination-bullet-active,
.swiper-pagination.swiper-pagination-progressbar .swiper-pagination-progressbar-fill {
  background: #fc5a5c !important; }

.sk-primary.sk-rotating-plane,
.sk-primary.sk-double-bounce .sk-child,
.sk-primary.sk-wave .sk-rect,
.sk-primary.sk-wandering-cubes .sk-cube,
.sk-primary.sk-spinner-pulse,
.sk-primary.sk-chasing-dots .sk-child,
.sk-primary.sk-three-bounce .sk-child,
.sk-primary.sk-circle .sk-child:before,
.sk-primary.sk-cube-grid .sk-cube,
.sk-primary.sk-fading-circle .sk-circle:before,
.sk-primary.sk-folding-cube .sk-cube:before {
  background-color: #fc5a5c; }

.sw-theme-default .step-anchor > li.active > a .sw-icon,
.sw-theme-default .step-anchor > li.active > a .sw-number {
  color: #fc5a5c;
  border-color: #fc5a5c; }

.plyr input[type='range']::-ms-fill-lower {
  background: #fc5a5c !important; }

.plyr input[type='range']:active::-webkit-slider-thumb {
  background: #fc5a5c !important; }

.plyr input[type='range']:active::-moz-range-thumb {
  background: #fc5a5c !important; }

.plyr input[type='range']:active::-ms-thumb {
  background: #fc5a5c !important; }

.plyr--video .plyr__controls button.tab-focus:focus,
.plyr--video .plyr__controls button:hover {
  background: #fc5a5c !important;
  color: #fff !important; }

.plyr--audio .plyr__controls button.tab-focus:focus,
.plyr--audio .plyr__controls button:hover {
  background: #fc5a5c !important;
  color: #fff !important; }

.plyr__play-large {
  background: #fc5a5c !important;
  color: #fff !important; }

.plyr__progress--played,
.plyr__volume--display {
  color: #fc5a5c !important; }

.fc-event {
  background: rgba(252, 90, 92, 0.15) !important; }

.fc-event-dot {
  background: rgba(252, 90, 92, 0.4) !important; }

.fc-highlight,
.fc-bgevent:not(.fc-nonbusiness) {
  background: #fc5a5c !important; }

.swal2-progress-steps[class] .swal2-progress-step.swal2-active-progress-step,
.swal2-progress-steps[class] .swal2-progress-step-line,
.swal2-progress-steps[class] .swal2-active-progress-step,
.swal2-progress-steps[class] .swal2-progress-step {
  background: #fc5a5c;
  color: #fff; }

.swal2-progress-steps[class] .swal2-progress-step.swal2-active-progress-step ~ .swal2-progress-step,
.swal2-progress-steps[class] .swal2-progress-step.swal2-active-progress-step ~ .swal2-progress-step-line {
  background: #fed6d6; }

.ui-product-color.active {
  box-shadow: 0 0 0 2px #fff, 0 0 0 4px #fc5a5c !important; }

.bg-navbar-theme {
  background-color: #222 !important;
  color: #919191; }
  .bg-navbar-theme .navbar-brand {
    color: #fff; }
    .bg-navbar-theme .navbar-brand:hover, .bg-navbar-theme .navbar-brand:focus {
      color: #fff; }
  .bg-navbar-theme .navbar-nav .nav-link {
    color: #919191; }
    .bg-navbar-theme .navbar-nav .nav-link:hover, .bg-navbar-theme .navbar-nav .nav-link:focus {
      color: #fff; }
    .bg-navbar-theme .navbar-nav .nav-link.disabled {
      color: #656565 !important; }
  .bg-navbar-theme .navbar-nav .show > .nav-link,
  .bg-navbar-theme .navbar-nav .active > .nav-link,
  .bg-navbar-theme .navbar-nav .nav-link.show,
  .bg-navbar-theme .navbar-nav .nav-link.active {
    color: #fff; }
  .bg-navbar-theme .navbar-toggler {
    color: #919191;
    border-color: rgba(255, 255, 255, 0.06); }
  .bg-navbar-theme .navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(255, 255, 255, 0.8)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e"); }
  .bg-navbar-theme .navbar-text {
    color: #919191; }
    .bg-navbar-theme .navbar-text a {
      color: #fff; }
      .bg-navbar-theme .navbar-text a:hover, .bg-navbar-theme .navbar-text a:focus {
        color: #fff; }
  .bg-navbar-theme hr {
    border-color: rgba(255, 255, 255, 0.06); }

.bg-sidenav-theme {
  background-color: #fff !important;
  color: #a3a4a6; }
  .bg-sidenav-theme .sidenav-link,
  .bg-sidenav-theme .sidenav-horizontal-prev,
  .bg-sidenav-theme .sidenav-horizontal-next {
    color: #a3a4a6; }
    .bg-sidenav-theme .sidenav-link:hover, .bg-sidenav-theme .sidenav-link:focus,
    .bg-sidenav-theme .sidenav-horizontal-prev:hover,
    .bg-sidenav-theme .sidenav-horizontal-prev:focus,
    .bg-sidenav-theme .sidenav-horizontal-next:hover,
    .bg-sidenav-theme .sidenav-horizontal-next:focus {
      color: #4E5155; }
    .bg-sidenav-theme .sidenav-link.active,
    .bg-sidenav-theme .sidenav-horizontal-prev.active,
    .bg-sidenav-theme .sidenav-horizontal-next.active {
      color: #4E5155; }
  .bg-sidenav-theme .sidenav-item.disabled .sidenav-link,
  .bg-sidenav-theme .sidenav-horizontal-prev.disabled,
  .bg-sidenav-theme .sidenav-horizontal-next.disabled {
    color: #c8c8ca !important; }
  .bg-sidenav-theme .sidenav-item.open:not(.sidenav-item-closing) > .sidenav-toggle,
  .bg-sidenav-theme .sidenav-item.active > .sidenav-link {
    color: #4E5155; }
  .bg-sidenav-theme .sidenav-item.active > .sidenav-link:not(.sidenav-toggle) {
    background-color: #efefef; }
  .bg-sidenav-theme.sidenav-horizontal .sidenav-menu > .sidenav-item.active > .sidenav-link:not(.sidenav-toggle) {
    background-color: #e9e9e9; }
  .bg-sidenav-theme.sidenav-horizontal .sidenav-inner > .sidenav-item:not(.sidenav-item-closing) > .sidenav-menu,
  .bg-sidenav-theme.sidenav-horizontal .sidenav-inner > .sidenav-item.open > .sidenav-toggle {
    background: #efefef; }
  .bg-sidenav-theme .sidenav-inner > .sidenav-item.sidenav-item-closing .sidenav-item.open .sidenav-menu,
  .bg-sidenav-theme .sidenav-inner > .sidenav-item.sidenav-item-closing .sidenav-item.open .sidenav-toggle {
    background: transparent;
    color: #a3a4a6; }
  .bg-sidenav-theme .sidenav-text {
    color: #4E5155; }
  .bg-sidenav-theme .sidenav-header {
    color: #babbbc; }
  .bg-sidenav-theme hr,
  .bg-sidenav-theme .sidenav-divider,
  .bg-sidenav-theme .sidenav-inner > .sidenav-item.open > .sidenav-menu::before {
    border-color: rgba(78, 81, 85, 0.075) !important; }
  .bg-sidenav-theme .sidenav-inner > .sidenav-header::before,
  .bg-sidenav-theme .sidenav-block::before {
    background-color: rgba(78, 81, 85, 0.075); }
  .bg-sidenav-theme .sidenav-inner > .sidenav-item.open .sidenav-item.open > .sidenav-toggle::before {
    background-color: #e3e3e3; }
  .bg-sidenav-theme .sidenav-inner > .sidenav-item.open .sidenav-item.active > .sidenav-link::before {
    background-color: #4E5155; }
  .bg-sidenav-theme .sidenav-inner > .sidenav-item.open .sidenav-item.open > .sidenav-toggle::before,
  .bg-sidenav-theme .sidenav-inner > .sidenav-item.open .sidenav-item.active > .sidenav-link::before {
    box-shadow: 0 0 0 2px #efefef; }
  .bg-sidenav-theme .ps__thumb-y,
  .bg-sidenav-theme .ps__rail-y.ps--clicking > .ps__thumb-y {
    background: rgba(78, 81, 85, 0.2) !important; }

.bg-sidenav-theme .sidenav-inner > .sidenav-item > .sidenav-link .sidenav-icon,
.bg-sidenav-theme .sidenav-inner > .sidenav-item > .sidenav-link:hover .sidenav-icon,
.bg-sidenav-theme .sidenav-inner > .sidenav-item > .sidenav-link:focus .sidenav-icon {
  color: rgba(24, 28, 33, 0.2); }

.bg-sidenav-theme .sidenav-inner > .sidenav-item.active > .sidenav-link .sidenav-icon {
  color: #fc5a5c !important; }

.bg-sidenav-theme .sidenav-item.active > .sidenav-link:not(.sidenav-toggle) {
  background: #f5f5f5; }

.layout-sidenav,
.layout-sidenav-horizontal {
  box-shadow: 0 0 10px rgba(24, 28, 33, 0.06); }

.bg-footer-theme {
  background-color: #f5f5f5 !important;
  color: #a3a4a6; }
  .bg-footer-theme .footer-link {
    color: #a3a4a6; }
    .bg-footer-theme .footer-link:hover, .bg-footer-theme .footer-link:focus {
      color: #4E5155; }
    .bg-footer-theme .footer-link.disabled {
      color: #c4c4c6 !important; }
  .bg-footer-theme .footer-text {
    color: #4E5155; }
  .bg-footer-theme .show > .footer-link,
  .bg-footer-theme .active > .footer-link,
  .bg-footer-theme .footer-link.show,
  .bg-footer-theme .footer-link.active {
    color: #4E5155; }
  .bg-footer-theme hr {
    border-color: rgba(78, 81, 85, 0.0769608); }

.layout-footer {
  box-shadow: 0 -1px 0 rgba(24, 28, 33, 0.06); }

hr {
  border-color: rgba(24, 28, 33, 0.06); }

.card,
.nav-tabs-top > .tab-content,
.nav-tabs-right > .tab-content,
.nav-tabs-bottom > .tab-content,
.nav-tabs-left > .tab-content {
  border-color: transparent;
  box-shadow: 0 10px 30px 0 rgba(24, 28, 33, 0.04); }

.ng2-archwizard-boxed-steps ul.steps-indicator,
.form-wizard-boxed-steps .wizard-nav {
  border-color: transparent !important;
  box-shadow: 0 10px 30px 0 rgba(24, 28, 33, 0.04) !important; }

.nav-tabs-top > .nav-tabs:not(.tabs-alt) .nav-link:not(.active),
.nav-tabs-top > div > .nav-tabs:not(.tabs-alt) .nav-link:not(.active),
.nav-tabs-right > .nav-tabs:not(.tabs-alt) .nav-link:not(.active),
.nav-tabs-right > div > .nav-tabs:not(.tabs-alt) .nav-link:not(.active),
.nav-tabs-bottom > .nav-tabs:not(.tabs-alt) .nav-link:not(.active),
.nav-tabs-bottom > div > .nav-tabs:not(.tabs-alt) .nav-link:not(.active),
.nav-tabs-left > .nav-tabs:not(.tabs-alt) .nav-link:not(.active),
.nav-tabs-left > div > .nav-tabs:not(.tabs-alt) .nav-link:not(.active) {
  border-color: transparent !important; }

.nav-tabs-top > .nav .nav-link.active,
.nav-tabs-top > div > .nav .nav-link.active,
.nav-tabs-right > .nav .nav-link.active,
.nav-tabs-right > div > .nav .nav-link.active,
.nav-tabs-bottom > .nav .nav-link.active,
.nav-tabs-bottom > div > .nav .nav-link.active,
.nav-tabs-left > .nav .nav-link.active,
.nav-tabs-left > div > .nav .nav-link.active {
  border-color: #fff !important; }

.nav-tabs-top > .nav-tabs:not(.tabs-alt),
.nav-tabs-top > div > .nav-tabs:not(.tabs-alt),
.nav-tabs-bottom > .nav-tabs:not(.tabs-alt),
.nav-tabs-bottom > div > .nav-tabs:not(.tabs-alt) {
  padding-right: 0px;
  padding-left: 0px; }

.nav-tabs-right > .nav-tabs:not(.tabs-alt),
.nav-tabs-right > div > .nav-tabs:not(.tabs-alt),
.nav-tabs-left > .nav-tabs:not(.tabs-alt),
.nav-tabs-left > div > .nav-tabs:not(.tabs-alt) {
  padding-top: 0px;
  padding-bottom: 0px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
